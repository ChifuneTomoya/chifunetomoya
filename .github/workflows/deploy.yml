name: Build, Push to ECR and Deploy to App Runner

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push ${{ matrix.service }} image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          ECR_REPOSITORY: ${{ matrix.service }}
        run: |
          echo "Building Docker image for $ECR_REPOSITORY"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./${{ matrix.service }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy ${{ matrix.service }} to App Runner
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          ECR_REPOSITORY: ${{ matrix.service }}
          SERVICE_ARN_BACKEND: ${{ secrets.SERVICE_ARN_BACKEND }}
          SERVICE_ARN_FRONTEND: ${{ secrets.SERVICE_ARN_FRONTEND }}
        run: |
          if [ "${{ matrix.service }}" = "backend" ]; then
            SERVICE_ARN=$SERVICE_ARN_BACKEND
          else
            SERVICE_ARN=$SERVICE_ARN_FRONTEND
          fi

          echo "Deploying $ECR_REPOSITORY to App Runner service $SERVICE_ARN"

          aws apprunner update-service \
            --service-arn $SERVICE_ARN \
            --source-configuration ImageRepository={ImageIdentifier=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG,ImageRepositoryType="ECR"} \
            --region $AWS_REGION